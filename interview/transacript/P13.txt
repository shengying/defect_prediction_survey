第一部分：统计问题询问
参见问卷调查
1/ 未参加过开源软件开发

2/ 角色： Testing

3/ 长度： 3年

4/ 英语水平： 好

重要指标：
5/ 投入产出比（effort投入进去，不能打水漂） + 
6/ 检出率

结果：
7/ 1） 预测的结果最好是软件实体中bug的数量，这样就可以和实际测试得到的bug数量进行对比，从而确定测试的完成率。
8/ 2）结果能够导出成excel，形成报表；
9/ 可以使用sql语句，可以自定义查找，来查询/过滤获得不同形式的结果。

第二部分：开放式问题 - 试图了解，什么是考虑使用缺陷预测工具的决定因素？

您认为，是什么因素决定您是否会考虑使用缺陷预测工具呢？
10/ 问题：分析问题比较花时间，但是有没有结果。

输入：
（7/） 有数量的输出比较好。这样可以和实际检出的进行比对。

从事的项目主要是什么形态的呢？新上的项目/长期维护和更新的项目/遗留项目，那个比例最高？
 
对输入有什么要求？如果有这些输入能不能满足呢？
11/ defect信息在客户这边。用虚拟机访问。

如果能够推进这个研究领域的发展，是否愿意在做适当清理后共享数据？
12/ 需要看公司的流程，bugzilla

输出：您认为，缺陷预测工具应该具有怎样的输出？对输出有什么具体要求呢？
（8/9/）导出到一个excel表格当中。可以自定义查找，写sql语句，报表。
衡量标准：您认为一个可以用的缺陷预测工具，需要具备怎样的特性？
13/ 心里有的底。误报率低一些。


第三部分：
参见调查问卷
14/ 认为缺陷预测的研究重要。

15/ 在代码审查之后、测试之前，进行预测

16/ QA总是可以获得： 源代码库、历史开发数据、开发人员和开发工具交互行为、代码审查历史数据；
程序设计文档，缺陷跟踪系统;
开发人员的电子邮件，包括对程序的交流和讨论.

17/ QA有时可以获得：
开发人员开发行为的社交网络信息（谁与谁有比较频繁的联系）

18/ QA希望是模块/方法级别的粒度

19/ 成本收益率为：检查Top 20%代码后，发现真正的缺陷。

20/ 可扩展性为100,000代码

21/ 运行时间小于30分钟


描述现在的一些研究方向，

22/ 不同意：  缺陷预测工具必须实时提供预测结果，即每一次代码发生变化时，都会进行预测。

第四部分：
感谢您的宝贵时间！
